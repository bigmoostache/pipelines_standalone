{
    "blueprints": {
        "pipelines.BUILDERS.NEWSLETTER": {
            "result_type": "newsletter",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "summary": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                },
                "articles": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "metrics": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "summary_analysis": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.BLENDS.pdf2md": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "pdf": {
                    "ext": "pdf",
                    "allowed_inputs": [
                        "pdf"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.BLENDS.pdf2txt": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "pdf": {
                    "ext": "pdf",
                    "allowed_inputs": [
                        "pdf"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.DEEPDOCS.file_easy_upload": {
            "result_type": "url2",
            "output_type": "SINGLE",
            "parameters": {
                "directory": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "/Uploads/"
                }
            },
            "inputs": {
                "doc": {
                    "ext": "bytes",
                    "allowed_inputs": [
                        "bytes"
                    ],
                    "type": "SINGLE"
                },
                "doc_name": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.GOOGLE.rss_search": {
            "result_type": "url",
            "output_type": "MULTI",
            "parameters": {
                "n_days": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 30
                }
            },
            "inputs": {
                "query": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.GOOGLE.search": {
            "result_type": "url",
            "output_type": "MULTI",
            "parameters": {
                "n_days": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 30
                }
            },
            "inputs": {
                "query": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.INSTAGRAM.CREATE_CAROUSEL": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "ids": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                },
                "carousel_caption": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.INSTAGRAM.PUBLISH": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "media_id": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.INSTAGRAM.UPLOAD_IMAGE": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "as_carousel": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "image_url": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "image_caption": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.LINKEDIN.PUBLISH": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "markdown": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                }
            },
            "inputs": {
                "title": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "content": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "tags": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                },
                "canonical_url": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.LUCARIO.upload_pdf": {
            "result_type": "url2",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "pdf": {
                    "ext": "pdf",
                    "allowed_inputs": [
                        "pdf"
                    ],
                    "type": "SINGLE"
                },
                "project_id": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.MEDIUM.PUBLISH": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "markdown": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                }
            },
            "inputs": {
                "title": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "content": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "tags": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                },
                "canonical_url": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.WEB.google_news_article": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "query": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.WEB.pdf_links": {
            "result_type": "txt",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "url": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.WEB.pdf_links_2_pdfs": {
            "result_type": "pdf",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "pdf_links": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CONNECTORS.WEB.rss": {
            "result_type": "json",
            "output_type": "MULTI",
            "parameters": {
                "num_hours": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 48
                }
            },
            "inputs": {
                "rss_url": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.WEB.trafilatura": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "url": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONNECTORS.WEB.url2md": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "role_message": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "Please extract the actual article in markdown. Remove the rest."
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-3.5-turbo-0125"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "max_tokens": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3500
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "frequency_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "presence_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                }
            },
            "inputs": {
                "url": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.dicts_2_excel": {
            "result_type": "xlsx",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "informations": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CONVERSIONS.dicts_2_jsonl": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "json": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CONVERSIONS.dict_2_str_builder": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "_format": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "json": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.jsonl_2_dicts": {
            "result_type": "json",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.jsonl_2_str_builder": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "parameter": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "formatting": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "__text__"
                },
                "prefix": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": ""
                },
                "joiner": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "\n"
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.txt_2_dict": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.wrap_2_txts_in_dic": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "param2": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "text1": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "text2": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.wrap_txt_in_dic": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "text1": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.xlsx_2_columns": {
            "result_type": "txt",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "table": {
                    "ext": "xlsx",
                    "allowed_inputs": [
                        "xlsx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.BIB.2_DICT": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "bib": {
                    "ext": "bib",
                    "allowed_inputs": [
                        "bib"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.BIB.2_JSONL": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "bib": {
                    "ext": "bib",
                    "allowed_inputs": [
                        "bib"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CONVERSIONS.DICT.2_dicts": {
            "result_type": "json",
            "output_type": "MULTI",
            "parameters": {
                "param": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": ""
                }
            },
            "inputs": {
                "json": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.DICT.2_jsonl": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "json": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.DICT.2_jsonl_segment": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "text_param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "new_text_param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "max_chars": {
                    "type": "int",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "json": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.DICT.2_jsonl_sublist": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "list_name": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "wrap_param": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "json": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.DICT.2_pdf": {
            "result_type": "pdf",
            "output_type": "SINGLE",
            "parameters": {
                "param": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "PDF"
                }
            },
            "inputs": {
                "pdf": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.DICT.2_txt": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "formatting": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.DICT.2_txts": {
            "result_type": "txt",
            "output_type": "MULTI",
            "parameters": {
                "param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "json": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.DICT.2_txt_dumps": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.DICT.to_bib": {
            "result_type": "bib",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "bib": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.DICT.to_html": {
            "result_type": "html",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "json_obj": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.DICTS.2_JSONL": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "sort_on": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": ""
                }
            },
            "inputs": {
                "dicts": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CONVERSIONS.DICTS.2_JSONL_SEGMENT": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "parameter": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "MAX_CHARS": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 750
                },
                "INDEX_NAME": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "index"
                },
                "REMOVE_PARAMS": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": ""
                }
            },
            "inputs": {
                "dicts": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CONVERSIONS.DICTS.2_txt_builder": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "parameter": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "sort_on": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "index"
                },
                "joiner": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "\n"
                }
            },
            "inputs": {
                "dicts": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CONVERSIONS.DICTS.TO_EXCEL": {
            "result_type": "xlsx",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "informations": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CONVERSIONS.DOCX.mammoth": {
            "result_type": "html",
            "output_type": "SINGLE",
            "parameters": {
                "body_only": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "docx": {
                    "ext": "docx",
                    "allowed_inputs": [
                        "docx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.HTML.2_PDF": {
            "result_type": "pdf",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "html": {
                    "ext": "html",
                    "allowed_inputs": [
                        "html"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.HTML.FACTIVA_TO_URLS": {
            "result_type": "url",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "html": {
                    "ext": "html",
                    "allowed_inputs": [
                        "html"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.HTML.to_SOTA": {
            "result_type": "sota",
            "output_type": "SINGLE",
            "parameters": {
                "char_th": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 7500
                },
                "hardcoded_prompt": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "Please rewrite this section, filling the missing information using the provided context and data. Preserve the structure of the section, your role is to fill the template. Is there is any missing information, please specify it, embedded in the text, in red. If everything is already filled, then your task is trivial: just rewrite everything verbatim. Be AS EXHAUSTIVE AS POSSIBLE., any missing data will be heavily punished."
                }
            },
            "inputs": {
                "html": {
                    "ext": "html",
                    "allowed_inputs": [
                        "html"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.HTML.to_SOTA_prequel": {
            "result_type": "html",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4.1"
                },
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "prompt": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "\n# HTML Section Headers Formatter\n\n## Task\nRewrite the given document with proper HTML heading tags while preserving all original content.\n\n## Instructions\n1. Clean this document\n2. Remove any table of contents, page numbers, footers, headers, and other artifacts that are not part of the main content. Leave the rest!!!\n3. Keep the paragraph ids, table ids, image ids and list ids intact!!! (This is very important, those ids, such as id=\"paragraph_1\", id=\"table_2\", etc. MUST remain unchanged). The document was contracted to make your job easier, but those ids will be used later to reconstruct the original document, so they must remain intact.\n4. The document's title must be wrapped in an <h1> tag\n5. Use only ONE <h1> tag for the entire document: if there currently are any, relegate them and shift the whole hierarchy down\n6. All section headings should use h2-h6 tags in a hierarchical structure\n7. Maintain proper heading hierarchy - never skip levels (e.g., don't go from h2 to h4)\n8. Return the complete HTML-formatted document\n\nThe purpose of your work is both to\n- Clean the document from unnecessary artifacts\n- Create a clean header structure that will be parsed in order to convert this html to a proper tree structure\n\nTo be more detailed, here is the python function that will be used to verify your output:\n```python\ndef parse_and_verify(res: str) -> str:\n    count = res.count(\"```html\")\n    # rule 1 - Ensure ```html exists, and only once\n    assert count == 1, f\"Expected 1 ```html, got {count}\"\n    position = res.index(\"```html\") + len(\"```html\")\n    res = res[position:]\n    count = res.count(\"```\")\n    # And that ``` exists after, and only once\n    assert count == 1, f\"Expected 1 ```, got {count}\"\n    position = res.index(\"```\")\n    res = res[:position]\n    # rule 2 - Document should start with '<h1>' -> YOU SHOULD ADD THIS AT THE VERY BEGINNING IF NECESSARY, even if it means inventing a title\n    assert res.strip().startswith('<h1>'), f\"Document does not start with <h1>, got: {res[:50]}...\"  # Check first 50 chars for context\n    # 3. Check correct structure of h tags: \n    soup = BeautifulSoup(res, 'html.parser')\n    tag_list = []\n    at_least_one = False\n    for i,child in enumerate(soup.children):\n        if not str(child).strip():\n            continue\n        at_least_one = True\n        if i == 0:\n            # rule 3 - Check that the document starts with a h1 tag, and that there is only one h1 tag in the document\n            assert child.name == 'h1', f\"First tag is not h1, got {child.name}\"\n        child_tag = child.name\n        if child_tag in ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']:\n            tag_list.append(child_tag)\n    assert at_least_one, f\"Expected at least one tag, got 0\"\n    # rule 4 - Check that the tags are in correct order: skipping from h1 to h3, for example, is not allowed\n    # Examples: h3 can be followed by h2, h3 or h4, but not h5\n    prev = 1\n    for tag in tag_list[1:]:\n        curr = int(tag[1])\n        assert (curr <= prev or curr == prev + 1), f\"Tag {tag} is not in correct order, prev: {prev}, curr: {curr}\"\n        prev = curr\n    # 4. We're good\n    return res\n```\n\n## Output Format\nYour response must follow this structure:\n1. Repeat the instructions\n2. Provide the formatted HTML inside code blocks:\n```html\n<h1>Document Title</h1> (or the actual title if you see it)\n...\n```\n"
                }
            },
            "inputs": {
                "doc": {
                    "ext": "html",
                    "allowed_inputs": [
                        "html"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.HTML.to_SOTA_prequel_v2": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4.1"
                },
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "prompt": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "\n# HTML Section Headers Formatter\n\n## Task\nRewrite the given document with proper HTML heading tags while preserving all original content.\n\n## Instructions\n1. Clean this document\n2. Remove any table of contents, page numbers, footers, headers, and other artifacts that are not part of the main content. Leave the rest!!!\n3. Keep the paragraph ids, table ids, image ids and list ids intact!!! (This is very important, those ids, such as id=\"paragraph_1\", id=\"table_2\", etc. MUST remain unchanged). The document was contracted to make your job easier, but those ids will be used later to reconstruct the original document, so they must remain intact.\n4. The document's title must be wrapped in an <h1> tag\n5. Use only ONE <h1> tag for the entire document: if there currently are any, relegate them and shift the whole hierarchy down\n6. All section headings should use h2-h6 tags in a hierarchical structure\n7. Maintain proper heading hierarchy - never skip levels (e.g., don't go from h2 to h4)\n8. Return the complete HTML-formatted document\n\nThe purpose of your work is both to\n- Clean the document from unnecessary artifacts\n- Create a clean header structure that will be parsed in order to convert this html to a proper tree structure\n\nTo be more detailed, here is the python function that will be used to verify your output:\n```python\ndef parse_and_verify(res: str) -> str:\n    count = res.count(\"```html\")\n    # rule 1 - Ensure ```html exists, and only once\n    assert count == 1, f\"Expected 1 ```html, got {count}\"\n    position = res.index(\"```html\") + len(\"```html\")\n    res = res[position:]\n    count = res.count(\"```\")\n    # And that ``` exists after, and only once\n    assert count == 1, f\"Expected 1 ```, got {count}\"\n    position = res.index(\"```\")\n    res = res[:position]\n    # rule 2 - Document should start with '<h1>' -> YOU SHOULD ADD THIS AT THE VERY BEGINNING IF NECESSARY, even if it means inventing a title\n    assert res.strip().startswith('<h1>'), f\"Document does not start with <h1>, got: {res[:50]}...\"  # Check first 50 chars for context\n    # 3. Check correct structure of h tags: \n    soup = BeautifulSoup(res, 'html.parser')\n    tag_list = []\n    at_least_one = False\n    for i,child in enumerate(soup.children):\n        if not str(child).strip():\n            continue\n        at_least_one = True\n        if i == 0:\n            # rule 3 - Check that the document starts with a h1 tag, and that there is only one h1 tag in the document\n            assert child.name == 'h1', f\"First tag is not h1, got {child.name}\"\n        child_tag = child.name\n        if child_tag in ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']:\n            tag_list.append(child_tag)\n    assert at_least_one, f\"Expected at least one tag, got 0\"\n    # rule 4 - Check that the tags are in correct order: skipping from h1 to h3, for example, is not allowed\n    # Examples: h3 can be followed by h2, h3 or h4, but not h5\n    prev = 1\n    for tag in tag_list[1:]:\n        curr = int(tag[1])\n        assert (curr <= prev or curr == prev + 1), f\"Tag {tag} is not in correct order, prev: {prev}, curr: {curr}\"\n        prev = curr\n    # 4. We're good\n    return res\n```\n\n## Output Format\nYour response must follow this structure:\n1. Repeat the instructions\n2. Provide the formatted HTML inside code blocks:\n```html\n<h1>Document Title</h1> (or the actual title if you see it)\n...\n```\n"
                }
            },
            "inputs": {
                "doc": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.JSONL.2_dicts_plus_dic": {
            "result_type": "json",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.JSONL.2_excel": {
            "result_type": "xlsx",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "informations": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.JSONL.2_txt": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "formatting": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "sort_by": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": null
                },
                "joiner": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "\n"
                },
                "grouped": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                },
                "group_by": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": null
                },
                "group_format": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": null
                },
                "group_joiner": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "\n"
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.JSONL.2_txt_raw": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.JSONL.2_url2": {
            "result_type": "url2",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.JSONL.2_urls": {
            "result_type": "url",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.JSONL.to_bib": {
            "result_type": "bib",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.JSONL.to_txt": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "formatting": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": ""
                },
                "sort_by": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": null
                },
                "joiner": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "\n"
                },
                "grouped": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                },
                "group_by": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": null
                },
                "group_format": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": null
                },
                "group_joiner": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "\n"
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.KONEKT.2_md": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "konekt": {
                    "ext": "konekt",
                    "allowed_inputs": [
                        "konekt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.KONEKT.strukt_2_dumps": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "konekt": {
                    "ext": "konektstrukt",
                    "allowed_inputs": [
                        "konektstrukt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.KONEKT.strukt_2_md": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "konekt": {
                    "ext": "konektstrukt",
                    "allowed_inputs": [
                        "konektstrukt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.MARKDOWN.2_dic": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "markdown": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.NBIB.2_BIBS": {
            "result_type": "bib",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "pubmed": {
                    "ext": "nbib",
                    "allowed_inputs": [
                        "nbib"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.PDF.2_dict": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "param": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "PDF"
                }
            },
            "inputs": {
                "pdf": {
                    "ext": "pdf",
                    "allowed_inputs": [
                        "pdf"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.PDF.2_preprocessed": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.PDF.2_sota": {
            "result_type": "sota",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.PDF.2_txt": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "method": {
                    "type": "normal, surya",
                    "isRequired": false,
                    "defaultValue": "normal"
                },
                "surya_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://www.datalab.to/api/v1/marker"
                }
            },
            "inputs": {
                "pdf": {
                    "ext": "pdf",
                    "allowed_inputs": [
                        "pdf"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.PDF.comparison": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text-embedding-3-large"
                }
            },
            "inputs": {
                "old_pdf": {
                    "ext": "pdf",
                    "allowed_inputs": [
                        "pdf"
                    ],
                    "type": "SINGLE"
                },
                "new_pdf": {
                    "ext": "pdf",
                    "allowed_inputs": [
                        "pdf"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.PDF.comparison_aggregate": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4.1"
                }
            },
            "inputs": {
                "work": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.PDF.comparison_aggregate_aggregate": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "work": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.PDF.comparison_azure": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text-embedding-ada-002"
                }
            },
            "inputs": {
                "old_pdf": {
                    "ext": "pdf",
                    "allowed_inputs": [
                        "pdf"
                    ],
                    "type": "SINGLE"
                },
                "new_pdf": {
                    "ext": "pdf",
                    "allowed_inputs": [
                        "pdf"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.PDF.comparison_polish": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "concatenated": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.PDF.to_txt": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "method": {
                    "type": "normal, surya",
                    "isRequired": false,
                    "defaultValue": "normal"
                },
                "surya_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://www.datalab.to/api/v1/marker"
                },
                "force_ocr": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "pdf": {
                    "ext": "pdf",
                    "allowed_inputs": [
                        "pdf"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.PDF.to_txt_mistral": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "pdf": {
                    "ext": "pdf",
                    "allowed_inputs": [
                        "pdf"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.PUBMED.2_BIBS": {
            "result_type": "bib",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "pubmed": {
                    "ext": "pubmed",
                    "allowed_inputs": [
                        "pubmed"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.RIS.2_BIBS": {
            "result_type": "bib",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "pubmed": {
                    "ext": "ris",
                    "allowed_inputs": [
                        "ris"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.TXT.2_DICTS": {
            "result_type": "json",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.TXT.2_HTML": {
            "result_type": "html",
            "output_type": "SINGLE",
            "parameters": {
                "css": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": ""
                }
            },
            "inputs": {
                "markdown": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.TXT.2_JSONL": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "key": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "texts": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CONVERSIONS.TXT.2_JSONL_INCLUDE_DIC": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "key": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "texts": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                },
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.TXT.2_JSONL_SEGMENT": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "MAX_CHARS": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 10000
                },
                "parameter": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "chunk"
                },
                "index_name": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "index"
                }
            },
            "inputs": {
                "txt": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.TXT.2_LIST": {
            "result_type": "txt",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.TXT.2_SOTA": {
            "result_type": "sota",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.TXT.2_URLS_GOOGLE": {
            "result_type": "url",
            "output_type": "MULTI",
            "parameters": {
                "n_days": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 30
                }
            },
            "inputs": {
                "query": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.TXT.2_URLS_GOOGLE_NEWS": {
            "result_type": "url",
            "output_type": "MULTI",
            "parameters": {
                "has_in_title": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": ""
                },
                "n_days": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 30
                }
            },
            "inputs": {
                "query": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.TXT.2_URLS_GOOGLE_RSS": {
            "result_type": "url",
            "output_type": "MULTI",
            "parameters": {
                "n_days": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 30
                }
            },
            "inputs": {
                "query": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.TXT.google_scraping_bee": {
            "result_type": "url2",
            "output_type": "MULTI",
            "parameters": {
                "timeframe": {
                    "type": "day, week, month, year",
                    "isRequired": false,
                    "defaultValue": "month"
                },
                "news": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                },
                "n_results": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 10
                }
            },
            "inputs": {
                "query": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.TXT.to_URLs": {
            "result_type": "url2",
            "output_type": "MULTI",
            "parameters": {
                "separator": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "\n"
                }
            },
            "inputs": {
                "urls": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.URL.2_dict": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "url": {
                    "ext": "url",
                    "allowed_inputs": [
                        "url"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CONVERSIONS.URL.2_jsonl": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "urls": {
                    "ext": "url",
                    "allowed_inputs": [
                        "url"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CONVERSIONS.XLSX.2_jsonl": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "df": {
                    "ext": "xlsx",
                    "allowed_inputs": [
                        "xlsx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.GRID.aggregate_votes": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "texts": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.GRID.custom_parse": {
            "result_type": "grid",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.GRID.custom_yaml_builder": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "grid": {
                    "ext": "grid",
                    "allowed_inputs": [
                        "grid"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.LUCARIO.anchored_top_k": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "embedding_model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text-embedding-3-large"
                },
                "anchor_key": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "anchors"
                },
                "max_groups_per_element": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "elements_per_group": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "min_elements_per_list": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "sections": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "lucario": {
                    "ext": "lucario",
                    "allowed_inputs": [
                        "lucario"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.LUCARIO.create_and_add_pdfs": {
            "result_type": "lucario",
            "output_type": "SINGLE",
            "parameters": {
                "lucario_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://lucario.deepdocs.net"
                }
            },
            "inputs": {
                "pdfs": {
                    "ext": "pdf",
                    "allowed_inputs": [
                        "pdf"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.PLAN.add_references": {
            "result_type": "plan",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "p": {
                    "ext": "plan",
                    "allowed_inputs": [
                        "plan"
                    ],
                    "type": "SINGLE"
                },
                "knowledge": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.PLAN.add_references_lucario": {
            "result_type": "plan",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "p": {
                    "ext": "plan",
                    "allowed_inputs": [
                        "plan"
                    ],
                    "type": "SINGLE"
                },
                "lucario": {
                    "ext": "lucario",
                    "allowed_inputs": [
                        "lucario"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.PLAN.all_bullet_points": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "p": {
                    "ext": "plan",
                    "allowed_inputs": [
                        "plan"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.PLAN.apply_contents": {
            "result_type": "plan",
            "output_type": "SINGLE",
            "parameters": {
                "add_lead_hashes": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "p": {
                    "ext": "plan",
                    "allowed_inputs": [
                        "plan"
                    ],
                    "type": "SINGLE"
                },
                "sections": {
                    "ext": "plan",
                    "allowed_inputs": [
                        "plan"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.PLAN.apply_contents_simple": {
            "result_type": "plan",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "p": {
                    "ext": "plan",
                    "allowed_inputs": [
                        "plan"
                    ],
                    "type": "SINGLE"
                },
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.PLAN.bullet_assignments": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "max_groups_per_element": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "elements_per_group": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "min_elements_per_list": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "p": {
                    "ext": "plan",
                    "allowed_inputs": [
                        "plan"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.PLAN.children": {
            "result_type": "plan",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "p": {
                    "ext": "plan",
                    "allowed_inputs": [
                        "plan"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.PLAN.from_string": {
            "result_type": "plan",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "temperature": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "top_p": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "t": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.PLAN.plan_output": {
            "result_type": "plan",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o"
                },
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "temperature": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "top_p": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.PLAN.preview": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "focus": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                },
                "include_all_bullets": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                }
            },
            "inputs": {
                "section": {
                    "ext": "plan",
                    "allowed_inputs": [
                        "plan"
                    ],
                    "type": "SINGLE"
                },
                "full_plan": {
                    "ext": "plan",
                    "allowed_inputs": [
                        "plan"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.PLAN.preview_jules": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "plan": {
                    "ext": "plan",
                    "allowed_inputs": [
                        "plan"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.PLAN.set_uuids": {
            "result_type": "plan",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "p": {
                    "ext": "plan",
                    "allowed_inputs": [
                        "plan"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.PLAN.to_html": {
            "result_type": "html",
            "output_type": "SINGLE",
            "parameters": {
                "css": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "template": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "p": {
                    "ext": "plan",
                    "allowed_inputs": [
                        "plan"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.PLAN.to_sota": {
            "result_type": "sota",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "p": {
                    "ext": "plan",
                    "allowed_inputs": [
                        "plan"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.SOTA.call": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4.1"
                }
            },
            "inputs": {
                "sota": {
                    "ext": "sota",
                    "allowed_inputs": [
                        "sota"
                    ],
                    "type": "SINGLE"
                },
                "task": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.SOTA.merge": {
            "result_type": "sota",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "sota": {
                    "ext": "sota",
                    "allowed_inputs": [
                        "sota"
                    ],
                    "type": "SINGLE"
                },
                "changes": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.SOTA.split": {
            "result_type": "json",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "sota": {
                    "ext": "sota",
                    "allowed_inputs": [
                        "sota"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.STRK.dicts_to_xlsx": {
            "result_type": "xlsx",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "dicts": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.STRK.dicts_to_xlsx_old": {
            "result_type": "xlsx",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "dicts": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.STRK.dicts_to_xlsx_v2": {
            "result_type": "xlsx",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "dicts": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                },
                "grid": {
                    "ext": "xtrk",
                    "allowed_inputs": [
                        "xtrk"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.STRK.reduce_grid": {
            "result_type": "xtrk",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "o3-mini"
                },
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "max_number_of_parameters": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 50
                }
            },
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "grid": {
                    "ext": "xtrk",
                    "allowed_inputs": [
                        "xtrk"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.STRK.save_grid": {
            "result_type": "xlsx",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "xlsx": {
                    "ext": "xlsx",
                    "allowed_inputs": [
                        "xlsx"
                    ],
                    "type": "SINGLE"
                },
                "schema": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.STRK.xtrk_output": {
            "result_type": "xtrk",
            "output_type": "SINGLE",
            "parameters": {
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o-2024-08-06"
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.STRK.xtrk_output_azure": {
            "result_type": "xtrk",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o-2024-08-06"
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.STRK.xtrk_to_dict": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o-2024-08-06"
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "schema": {
                    "ext": "xtrk",
                    "allowed_inputs": [
                        "xtrk"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.STRK.xtrk_to_dict_2": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "reflexive_model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "o1-preview"
                },
                "formatter_model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o"
                },
                "max_tokens": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 32000
                },
                "simpler_model_if_no_list": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                }
            },
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "schema": {
                    "ext": "xtrk",
                    "allowed_inputs": [
                        "xtrk"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.STRK.xtrk_to_dict_azure": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "reflexive_model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "o1-preview"
                },
                "formatter_model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o"
                },
                "max_tokens": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 32000
                },
                "simpler_model_if_no_list": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                }
            },
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "schema": {
                    "ext": "xtrk",
                    "allowed_inputs": [
                        "xtrk"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.CUSTOM_TYPES.XLSX.save_grid": {
            "result_type": "xlsx",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "xlsx": {
                    "ext": "xlsx",
                    "allowed_inputs": [
                        "xlsx"
                    ],
                    "type": "SINGLE"
                },
                "schema": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.EMBEDDINGS.anchored_top_k": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "embedding_model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text-embedding-3-large"
                },
                "anchor_key": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "anchors"
                },
                "anchor_expect_lists": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                },
                "chunk_key": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text"
                },
                "chunk_document_id_key": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "document_id"
                },
                "max_groups_per_element": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "elements_per_group": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "min_elements_per_list": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "assigned_to_key": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "assigned_to"
                },
                "max_total_assignments": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "additional_id_key": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": null
                }
            },
            "inputs": {
                "sections": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "chunks": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.EMBEDDINGS.clusterize": {
            "result_type": "jsonl",
            "output_type": "MULTI",
            "parameters": {
                "text_param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "num_clusters": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 30
                },
                "n_rerolls": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 10
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text-embedding-ada-002"
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.EMBEDDINGS.clusterize_uniform": {
            "result_type": "jsonl",
            "output_type": "MULTI",
            "parameters": {
                "n_clusters": {
                    "type": "int",
                    "isRequired": true,
                    "defaultValue": null
                },
                "to_embed_param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "n_rerolls": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 100
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text-embedding-ada-002"
                }
            },
            "inputs": {
                "elements": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.EMBEDDINGS.clusterize_uniform_v2": {
            "result_type": "jsonl",
            "output_type": "MULTI",
            "parameters": {
                "n_per_cluster": {
                    "type": "int",
                    "isRequired": true,
                    "defaultValue": null
                },
                "to_embed_param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "n_rerolls": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 4
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text-embedding-ada-002"
                }
            },
            "inputs": {
                "elements": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.EMBEDDINGS.segment_and_top_k": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "top_k": {
                    "type": "int",
                    "isRequired": true,
                    "defaultValue": null
                },
                "segment_max_chars": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 2000
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text-embedding-3-large"
                }
            },
            "inputs": {
                "question": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "article": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.EMBEDDINGS.smart_similarity_openai_2": {
            "result_type": "json",
            "output_type": "MULTI",
            "parameters": {
                "top_k": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 10
                },
                "text_key": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "texts"
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text-embedding-ada-002"
                }
            },
            "inputs": {
                "segments": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                },
                "question": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.EMBEDDINGS.topk_jsonl": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "text_param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "n_to_keep": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 20
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text-embedding-ada-002"
                },
                "uniform_per_request": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "objectives": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.EMBEDDINGS.topk_jsonljsonl": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "text_param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "query_text_param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "n_to_keep": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 20
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text-embedding-3-large"
                },
                "uniform_per_request": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "objectives": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.EMBEDDINGS.topk_jsonl_dict": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "dict_format": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "jsonl_format": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "n_to_keep": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 20
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text-embedding-ada-002"
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "objective": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.EMBEDDINGS.top_k": {
            "result_type": "txt",
            "output_type": "MULTI",
            "parameters": {
                "top_k": {
                    "type": "int",
                    "isRequired": true,
                    "defaultValue": null
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text-embedding-ada-002"
                }
            },
            "inputs": {
                "texts": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                },
                "question": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.azure.dict_output": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "verify": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4-turbo"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "retries": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3
                },
                "max_tokens": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3500
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "frequency_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "presence_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.azure.extraction": {
            "result_type": "json",
            "output_type": "MULTI",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o"
                },
                "temperature": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "top_p": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "e": {
                    "ext": "extraction",
                    "allowed_inputs": [
                        "extraction"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.azure.grid_instance_output": {
            "result_type": "grid",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "retries": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.azure.grid_notation_output": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o-2024-08-06"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "retries": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "with_justifications": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "grid": {
                    "ext": "grid",
                    "allowed_inputs": [
                        "grid"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.azure.json_dict_output": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "schema": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o-2024-08-06"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "retries": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3
                },
                "max_tokens": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3500
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "frequency_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "presence_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.azure.prepare_extraction": {
            "result_type": "select",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o"
                },
                "temperature": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "top_p": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.azure.prompt_output": {
            "result_type": "prompt",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4-1106-preview"
                },
                "output_role": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "assistant"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "max_tokens": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3500
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "frequency_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "presence_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.azure.select_output_v2": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o"
                },
                "rerolls": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "e": {
                    "ext": "select",
                    "allowed_inputs": [
                        "select"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.azure.select_prepare": {
            "result_type": "extraction",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o-2024-08-06"
                },
                "temperature": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "top_p": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.azure.str_output": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o-mini"
                },
                "json_format": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "max_tokens": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3500
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "frequency_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "presence_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.azure.tiny_bib_output": {
            "result_type": "tiny_bib",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "retries": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.langchain.embeddings": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "texts": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                },
                "llm": {
                    "ext": "llm",
                    "allowed_inputs": [
                        "llm"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.langchain.prompt": {
            "result_type": "prompt",
            "output_type": "SINGLE",
            "parameters": {
                "role": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "assistant"
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "llm": {
                    "ext": "llm",
                    "allowed_inputs": [
                        "llm"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.langchain.text": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "llm": {
                    "ext": "llm",
                    "allowed_inputs": [
                        "llm"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.v3.client": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text-embedding-3-large"
                }
            },
            "inputs": {}
        },
        "pipelines.LLMS.v3.embeddings": {
            "result_type": "ndarray",
            "output_type": "SINGLE",
            "parameters": {
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text-embedding-3-large"
                },
                "chunk_size": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1000
                }
            },
            "inputs": {
                "texts": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.LLMS.v3.prompt": {
            "result_type": "prompt",
            "output_type": "SINGLE",
            "parameters": {
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4.1"
                },
                "role": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "user"
                },
                "reasoning_effort": {
                    "type": "none, low, medium, high",
                    "isRequired": false,
                    "defaultValue": "none"
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.v3.str": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4.1"
                },
                "reasoning_effort": {
                    "type": "none, low, medium, high",
                    "isRequired": false,
                    "defaultValue": "none"
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS.v3.structured": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4.1"
                },
                "hard_coded_model": {
                    "type": "none, tree/gap_analysis, select, tiny_bib, xtrk",
                    "isRequired": false,
                    "defaultValue": "none"
                },
                "convert_back_to_dict": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "output_format": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "mode": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.dict_output": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "verify": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4-turbo"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "retries": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3
                },
                "max_tokens": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3500
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "frequency_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "presence_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.extraction": {
            "result_type": "json",
            "output_type": "MULTI",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "temperature": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "top_p": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "e": {
                    "ext": "extraction",
                    "allowed_inputs": [
                        "extraction"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.grid_instance_output": {
            "result_type": "grid",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "retries": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.grid_notation_output": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o-2024-08-06"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "retries": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "with_justifications": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "grid": {
                    "ext": "grid",
                    "allowed_inputs": [
                        "grid"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.json_dict_output": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "schema": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o-2024-08-06"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "retries": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3
                },
                "max_tokens": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3500
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "frequency_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "presence_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "reasoning_effort": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "high"
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.konekt": {
            "result_type": "konekt",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o-2024-08-06"
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "gt": {
                    "ext": "konektstrukt",
                    "allowed_inputs": [
                        "konektstrukt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.konekt_structure": {
            "result_type": "konektstrukt",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o-2024-08-06"
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.pdict_instance_output": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4-turbo"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "retries": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3
                },
                "max_tokens": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3500
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "frequency_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "presence_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "structure": {
                    "ext": "pdict",
                    "allowed_inputs": [
                        "pdict"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.pdict_output": {
            "result_type": "pdict",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "retries": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3
                },
                "max_tokens": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3500
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "frequency_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "presence_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.prepare_extraction": {
            "result_type": "select",
            "output_type": "SINGLE",
            "parameters": {
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4.1"
                },
                "temperature": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "top_p": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "use_codes": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": ""
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.prompt_output": {
            "result_type": "prompt",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4-1106-preview"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "output_role": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "assistant"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "max_tokens": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3500
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "frequency_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "presence_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.select_output": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o-2024-08-06"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "temperature": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "top_p": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "e": {
                    "ext": "select",
                    "allowed_inputs": [
                        "select"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.select_output_v2": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o"
                },
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "rerolls": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "e": {
                    "ext": "select",
                    "allowed_inputs": [
                        "select"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.select_prepare": {
            "result_type": "extraction",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o-2024-08-06"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "temperature": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "top_p": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.str_output": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "json_format": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "max_tokens": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3500
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "frequency_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                },
                "presence_penalty": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2.tiny_bib_output": {
            "result_type": "tiny_bib",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "retries": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LLMS_v2_specific_outputs.to_telegraphic": {
            "result_type": "url2",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4o-2024-08-06"
                },
                "base_url": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "https://api.openai.com/v1"
                },
                "temperature": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                },
                "retries": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3
                },
                "top_p": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1
                }
            },
            "inputs": {
                "url": {
                    "ext": "url2",
                    "allowed_inputs": [
                        "url2"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LUCARIO.lucario_topk": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "project_id": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "k": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 10
                },
                "max_per_information": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3
                }
            },
            "inputs": {
                "query_text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.LUCARIO.lucario_topk_multiquery": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "project_id": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "k": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 10
                },
                "max_per_information": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 3
                }
            },
            "inputs": {
                "queries": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.DICT.add_dict": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "param_name": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "value_to_add": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                },
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.DICT.add_jsonl": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "param_name": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "value_to_add": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.DICT.all_values_are_true": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "param_name": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.DICT.expression": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "param_name": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "expression": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.DICT.extract_value": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "key_name": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.DICT.remove_keys": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "keys_to_keep": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "remove_them_instead": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.DICT.weird_filter": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "values": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                },
                "dic_analysis": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.DICTS.add_str": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "param_name": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "value": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.DICTS.dic_filter": {
            "result_type": "json",
            "output_type": "MULTI",
            "parameters": {
                "key": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "regexp": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "input_flags": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": ""
                }
            },
            "inputs": {
                "json": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.MANIPS.DICTS.filter": {
            "result_type": "json",
            "output_type": "MULTI",
            "parameters": {
                "key": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "values": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "dics": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.MANIPS.DICTS.merge": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "left": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                },
                "right": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.DICTS.merge_deep": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "dics": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.MANIPS.DICTS.merge_entropic": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "dics": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.MANIPS.DICTS.remove": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "remove": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.DICTS.segment": {
            "result_type": "json",
            "output_type": "MULTI",
            "parameters": {
                "parameter": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "max_chars": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1000
                },
                "max_chunks": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1000
                },
                "new_index_name": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "index"
                },
                "paragraphs_name": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "paragraphs"
                },
                "remove_big": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "json": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.HTML.placeholder_contract": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "html": {
                    "ext": "html",
                    "allowed_inputs": [
                        "html"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.HTML.placeholder_expand": {
            "result_type": "html",
            "output_type": "SINGLE",
            "parameters": {
                "param": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "new_contracted_html"
                }
            },
            "inputs": {
                "contracted_data": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.HTML.remove_images": {
            "result_type": "html",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "html": {
                    "ext": "html",
                    "allowed_inputs": [
                        "html"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.HTML.upload_images": {
            "result_type": "html",
            "output_type": "SINGLE",
            "parameters": {
                "upload_directory": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "/Uploads/"
                }
            },
            "inputs": {
                "html": {
                    "ext": "html",
                    "allowed_inputs": [
                        "html"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.add_dict": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.add_dict_weird": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "jsonl_param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "new_param_name": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.add_index": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "new_index_name": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.add_str": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "format": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "new_param_name": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.concat": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "add_id": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                },
                "id_column": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "id"
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.MANIPS.JSONL.concat_four": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "param": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": ""
                }
            },
            "inputs": {
                "jsonl_1": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "jsonl_2": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "jsonl_3": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "jsonl_4": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.concat_on_index": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "max_left_to_right_ratio_in_percent": {
                    "type": "int",
                    "isRequired": true,
                    "defaultValue": null
                },
                "index_name": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "left": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "right": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.concat_two": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "param": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": ""
                }
            },
            "inputs": {
                "jsonl_1": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "jsonl_2": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.filter": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "jsonl_param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "jsonl_value": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "equals": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                },
                "remove_nans": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.filter_bool": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "keep_false": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.filter_dic": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "dic_param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "jsonlparam": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                },
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.keep_top": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "sort_on": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "keep": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 10
                },
                "reverse": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.listset": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "jsonl_param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.remove_duplicates": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "hash_param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.segment": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "text_param": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "text"
                },
                "max_chars": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1000
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.set_bool": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "value": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.sort": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "sort_on": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "jsons": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.JSONL.split": {
            "result_type": "jsonl",
            "output_type": "MULTI",
            "parameters": {
                "split_on": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.BEGINNING": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "n_chars": {
                    "type": "int",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.concat_2": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "format": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "text_1": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "text_2": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.concat_2_lists": {
            "result_type": "txt",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "text_1": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                },
                "text_2": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.concat_4": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "format": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "text_1": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "text_2": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "text_3": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "text_4": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.concat_5": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "format": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "text_1": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "text_2": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "text_3": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "text_4": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "text_5": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.concat_multi": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "joiner": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "\n\n"
                },
                "first_too": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "texts": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.fancy_ref_v2": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "metadata": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                },
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.fast_smart_segment": {
            "result_type": "txt",
            "output_type": "MULTI",
            "parameters": {
                "max_chars": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1000
                }
            },
            "inputs": {
                "article": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.filter": {
            "result_type": "txt",
            "output_type": "MULTI",
            "parameters": {
                "keywords": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "chunks": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.filter_out": {
            "result_type": "txt",
            "output_type": "MULTI",
            "parameters": {
                "keywords": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "chunks": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.format_one": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "param": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.remove-refs-and-bib": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.REMOVE_REFS": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.segment": {
            "result_type": "txt",
            "output_type": "MULTI",
            "parameters": {
                "max_chars": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1000
                },
                "n_chunks_begin": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": null
                },
                "n_chunks_end": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": null
                }
            },
            "inputs": {
                "article": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.segment_uniform": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "n_chars": {
                    "type": "int",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "x": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.smart_segment": {
            "result_type": "json",
            "output_type": "MULTI",
            "parameters": {
                "max_chars": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 1000
                }
            },
            "inputs": {
                "article": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.split": {
            "result_type": "txt",
            "output_type": "MULTI",
            "parameters": {
                "split_on": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.url_domain_name": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "url": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.TEXTS.word_count": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "text": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.URL.apply_telegraphic": {
            "result_type": "url2",
            "output_type": "SINGLE",
            "parameters": {
                "ignore_if_success": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                }
            },
            "inputs": {
                "url": {
                    "ext": "url2",
                    "allowed_inputs": [
                        "url2"
                    ],
                    "type": "SINGLE"
                },
                "telegraphic": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.URL.gnews": {
            "result_type": "url",
            "output_type": "SINGLE",
            "parameters": {
                "ignore_if_success": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                }
            },
            "inputs": {
                "url": {
                    "ext": "url",
                    "allowed_inputs": [
                        "url"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.URL.redirect": {
            "result_type": "url",
            "output_type": "SINGLE",
            "parameters": {
                "ignore_if_success": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                }
            },
            "inputs": {
                "url": {
                    "ext": "url",
                    "allowed_inputs": [
                        "url"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.URL.requests": {
            "result_type": "url",
            "output_type": "SINGLE",
            "parameters": {
                "ignore_if_success": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                }
            },
            "inputs": {
                "url": {
                    "ext": "url",
                    "allowed_inputs": [
                        "url"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.URL.requests_per_site": {
            "result_type": "url",
            "output_type": "SINGLE",
            "parameters": {
                "ignore_if_success": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                }
            },
            "inputs": {
                "url": {
                    "ext": "url",
                    "allowed_inputs": [
                        "url"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.URL.scrapingbee": {
            "result_type": "url2",
            "output_type": "SINGLE",
            "parameters": {
                "premium": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                },
                "block_ads": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                },
                "render_js": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                },
                "block_resources": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                },
                "country": {
                    "type": "us, ru, fr",
                    "isRequired": false,
                    "defaultValue": "us"
                },
                "wait": {
                    "type": "networkidle0, networkidle2, load, domcontentloaded",
                    "isRequired": false,
                    "defaultValue": "networkidle0"
                }
            },
            "inputs": {
                "url": {
                    "ext": "url2",
                    "allowed_inputs": [
                        "url2"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.MANIPS.URL.trafilatura": {
            "result_type": "url",
            "output_type": "SINGLE",
            "parameters": {
                "ignore_if_success": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                }
            },
            "inputs": {
                "url": {
                    "ext": "url",
                    "allowed_inputs": [
                        "url"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.PROMPTING.add_dict": {
            "result_type": "prompt",
            "output_type": "SINGLE",
            "parameters": {
                "role": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "format": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.PROMPTING.add_pdict": {
            "result_type": "prompt",
            "output_type": "SINGLE",
            "parameters": {
                "role": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "before": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "after": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.PROMPTING.add_pdict_instructions": {
            "result_type": "prompt",
            "output_type": "SINGLE",
            "parameters": {
                "role": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "before": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "after": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "ask_justifications": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "pdict": {
                    "ext": "pdict",
                    "allowed_inputs": [
                        "pdict"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.PROMPTING.add_raw": {
            "result_type": "prompt",
            "output_type": "SINGLE",
            "parameters": {
                "role": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "prompt": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.PROMPTING.add_static": {
            "result_type": "prompt",
            "output_type": "SINGLE",
            "parameters": {
                "role": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "prompt": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.PROMPTING.get_last": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "p": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.PROMPTING.initialize_dict": {
            "result_type": "prompt",
            "output_type": "SINGLE",
            "parameters": {
                "role": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "format": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.PROMPTING.initialize_dict_v2": {
            "result_type": "prompt",
            "output_type": "SINGLE",
            "parameters": {
                "role": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "format": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.PROMPTING.initialize_raw": {
            "result_type": "prompt",
            "output_type": "SINGLE",
            "parameters": {
                "role": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "limit": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 0
                }
            },
            "inputs": {
                "prompt": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.PROMPTING.initialize_static": {
            "result_type": "prompt",
            "output_type": "SINGLE",
            "parameters": {
                "role": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "prompt": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {}
        },
        "pipelines.specific.common_denominator.build": {
            "result_type": "html",
            "output_type": "SINGLE",
            "parameters": {
                "css": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": ""
                },
                "template": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <style>\n__CSS__\n    </style>\n</head>\n<body>\n    <main>\n__HTML__\n    </main>\n</body>\n</html>\n"
                }
            },
            "inputs": {
                "doc": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                },
                "sections_contents": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.specific.common_denominator.tasks": {
            "result_type": "json",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "doc": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.specific.common_denominator.write": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "doc_A": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "doc_B": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "doc": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                },
                "task": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.2_calculate": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.2_html": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                },
                "calculate": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.add_final_score": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "scores": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                },
                "dict": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.bibliography_correction": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "markdown_content": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.bibliography_correction_old": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "markdown_content": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.concat_2": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "format": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "This is a pipeline with __text_1__ and __text_2__"
                },
                "tbool": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": true
                }
            },
            "inputs": {
                "text_1": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "text_2": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.DEMO_GRAPH": {
            "result_type": "tutorial_demo",
            "output_type": "SINGLE",
            "parameters": {
                "provider": {
                    "type": "openai, cohere, anthropic, google, azure, huggingface",
                    "isRequired": false,
                    "defaultValue": "openai"
                },
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "gpt-4.1"
                }
            },
            "inputs": {
                "prompt": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.download-and-get-s3url": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "retrieve_pdf": {
                    "type": "bool",
                    "isRequired": false,
                    "defaultValue": false
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.error": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "error_probability": {
                    "type": "float",
                    "isRequired": false,
                    "defaultValue": 0.5
                }
            },
            "inputs": {
                "input": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.expand_tags": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "tag_param": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "TAG"
                },
                "new_tag_param": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "FTAG"
                },
                "remove_strings": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": ""
                }
            },
            "inputs": {
                "data": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.extract_images": {
            "result_type": "json",
            "output_type": "MULTI",
            "parameters": {},
            "inputs": {
                "article": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.get_full_text": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "pymupdf4llm"
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.jsonl_retrieve_lines_by_keyvalue": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {
                "key": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                },
                "value": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "jsonl": {
                    "ext": "jsonl",
                    "allowed_inputs": [
                        "pubmed",
                        "ris",
                        "nbib",
                        "prompt",
                        "jsonl"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.json_2_str": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {
                "dummy_paramerter": {
                    "type": "txt",
                    "isRequired": true,
                    "defaultValue": null
                }
            },
            "inputs": {
                "json_input": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.missing_tags": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "new_param": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "missing_tags"
                }
            },
            "inputs": {
                "references": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                },
                "prompt": {
                    "ext": "prompt",
                    "allowed_inputs": [
                        "prompt"
                    ],
                    "type": "SINGLE"
                },
                "dico": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.plan_json_builder": {
            "result_type": "jsonl",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "x": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.plan_txt_builder": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "xs": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.TESTS.pre_segment_cleaning": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "article": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.QA_get_bad_pdf": {
            "result_type": "txt",
            "output_type": "MULTI",
            "parameters": {
                "min_line_count": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 30
                },
                "min_chars": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 5000
                }
            },
            "inputs": {
                "articles": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.TESTS.QA_get_good_pdf": {
            "result_type": "txt",
            "output_type": "MULTI",
            "parameters": {
                "min_line_count": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 30
                },
                "min_chars": {
                    "type": "int",
                    "isRequired": false,
                    "defaultValue": 5000
                }
            },
            "inputs": {
                "articles": {
                    "ext": "txt",
                    "allowed_inputs": [
                        "html",
                        "konektstrukt",
                        "url2",
                        "txt",
                        "md"
                    ],
                    "type": "MULTI"
                }
            }
        },
        "pipelines.TESTS.single_get_full_text": {
            "result_type": "json",
            "output_type": "SINGLE",
            "parameters": {
                "model": {
                    "type": "txt",
                    "isRequired": false,
                    "defaultValue": "pymupdf4llm"
                }
            },
            "inputs": {
                "json_in": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.TESTS.tables_prompt_builder": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {
                "dic": {
                    "ext": "json",
                    "allowed_inputs": [
                        "tiny_bib",
                        "plan",
                        "txt",
                        "url",
                        "url2",
                        "ra",
                        "select",
                        "xtrk",
                        "extraction",
                        "html",
                        "konektstrukt",
                        "grid",
                        "tutorial_demo",
                        "md",
                        "konekt",
                        "factory",
                        "lucario",
                        "json",
                        "bib",
                        "mdx"
                    ],
                    "type": "SINGLE"
                }
            }
        },
        "pipelines.utils.booleans": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {}
        },
        "pipelines.utils.simplify": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {}
        },
        "pipelines.utils.useless": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {}
        },
        "pipelines.utils.yaml": {
            "result_type": "txt",
            "output_type": "SINGLE",
            "parameters": {},
            "inputs": {}
        }
    }
}